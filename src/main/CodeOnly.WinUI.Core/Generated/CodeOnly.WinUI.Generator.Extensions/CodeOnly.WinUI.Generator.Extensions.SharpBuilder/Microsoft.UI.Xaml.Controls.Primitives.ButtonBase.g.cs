//
// <auto-generated> CodeOnly.WinUI.Core.Generator.Extensions
//

#nullable enable
#pragma warning disable CS8601

using System;
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using System.Collections.Generic;


namespace CodeOnly.WinUI.Core
{
    using CodeOnly.WinUI.Core.Internal;
    
    public static partial class ButtonBaseExtension
    {
        public static T ClickMode<T>(this T self,
            Microsoft.UI.Xaml.Controls.ClickMode clickMode)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            self.SetValueOrAddSetter(Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.ClickModeProperty, clickMode);
            return self;
        }
        
        public static T ClickMode<T>(this T self, Func<PropertyContext<Microsoft.UI.Xaml.Controls.ClickMode>, IPropertyBuilder<Microsoft.UI.Xaml.Controls.ClickMode>> configure)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            var context = new PropertyContext<Microsoft.UI.Xaml.Controls.ClickMode>(self, Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.ClickModeProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Command<T>(this T self,
            System.Windows.Input.ICommand command)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            self.SetValueOrAddSetter(Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandProperty, command);
            return self;
        }
        
        public static T Command<T>(this T self, Func<PropertyContext<System.Windows.Input.ICommand>, IPropertyBuilder<System.Windows.Input.ICommand>> configure)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            var context = new PropertyContext<System.Windows.Input.ICommand>(self, Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandProperty);
            configure(context).Build();
            return self;
        }
        
        public static T CommandParameter<T>(this T self,
            object commandParameter)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            self.SetValueOrAddSetter(Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameterProperty, commandParameter);
            return self;
        }
        
        public static T CommandParameter<T>(this T self, Func<PropertyContext<object>, IPropertyBuilder<object>> configure)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            var context = new PropertyContext<object>(self, Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameterProperty);
            configure(context).Build();
            return self;
        }
        
        public static T OnClick<T>(this T self, Microsoft.UI.Xaml.RoutedEventHandler handler)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            self.Click += handler;
            return self;
        }
        
        public static T OnClick<T>(this T self, System.Action<T> action)
            where T : Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
        {
            self.Click += (o, arg) => action(self);
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
