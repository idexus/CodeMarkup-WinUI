//
// <auto-generated> CodeOnly.WinUI.Core.Generator.Extensions
//

#nullable enable
#pragma warning disable CS8601

using System;
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using System.Collections.Generic;


namespace CodeOnly.WinUI.Core
{
    using CodeOnly.WinUI.Core.Internal;
    
    public static partial class PanelExtension
    {
        public static T Background<T>(this T self,
            Microsoft.UI.Xaml.Media.Brush background)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            self.SetValueOrAddSetter(Microsoft.UI.Xaml.Controls.Panel.BackgroundProperty, background);
            return self;
        }
        
        public static T Background<T>(this T self, Func<PropertyContext<Microsoft.UI.Xaml.Media.Brush>, IPropertyBuilder<Microsoft.UI.Xaml.Media.Brush>> configure)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            var context = new PropertyContext<Microsoft.UI.Xaml.Media.Brush>(self, Microsoft.UI.Xaml.Controls.Panel.BackgroundProperty);
            configure(context).Build();
            return self;
        }
        
        public static T BackgroundTransition<T>(this T self,
            Microsoft.UI.Xaml.BrushTransition backgroundTransition)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            if (FluentStyling.Setters != null) throw new ArgumentException("Fluent styling not available for property BackgroundTransition");
            self.BackgroundTransition = backgroundTransition;
            return self;
        }
        
        public static T Children<T>(this T self,
            IList<Microsoft.UI.Xaml.UIElement> children)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            foreach (var item in children)
                self.Children.Add(item);
            return self;
        }

        public static T Children<T>(this T self,
            params Microsoft.UI.Xaml.UIElement[] children)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            foreach (var item in children)
                self.Children.Add(item);
            return self;
        }
        
        public static T ChildrenTransitions<T>(this T self,
            IList<Microsoft.UI.Xaml.Media.Animation.Transition> childrenTransitions)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            foreach (var item in childrenTransitions)
                self.ChildrenTransitions.Add(item);
            return self;
        }

        public static T ChildrenTransitions<T>(this T self,
            params Microsoft.UI.Xaml.Media.Animation.Transition[] childrenTransitions)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            foreach (var item in childrenTransitions)
                self.ChildrenTransitions.Add(item);
            return self;
        }
        
        public static T ChildrenTransitions<T>(this T self, Func<PropertyContext<Microsoft.UI.Xaml.Media.Animation.TransitionCollection>, IPropertyBuilder<Microsoft.UI.Xaml.Media.Animation.TransitionCollection>> configure)
            where T : Microsoft.UI.Xaml.Controls.Panel
        {
            var context = new PropertyContext<Microsoft.UI.Xaml.Media.Animation.TransitionCollection>(self, Microsoft.UI.Xaml.Controls.Panel.ChildrenTransitionsProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
